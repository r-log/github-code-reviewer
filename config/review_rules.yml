rules:
  max_line_length: 100
  max_file_lines: 300
  max_function_lines: 50
  required_docstrings: true
  naming_conventions:
    functions: snake_case
    classes: PascalCase
    variables: snake_case
    constants: UPPER_CASE
  complexity:
    max_cognitive_complexity: 15
    max_nested_blocks: 3
  imports:
    groups:
      - stdlib
      - third_party
      - local
    require_sorted: true
    require_separate_groups: true
  type_hints:
    require_return_hints: true
    require_parameter_hints: true
    prefer_optional: true
    disallow_typing_prefix: true
  duplicates:
    min_block_size: 4
    similarity_threshold: 0.85
    ignore_comments: true
  magic_numbers:
    enabled: true
    allowed_numbers: [0, 1, -1, 100, 1000]
    ignore_patterns:
      - range_calls
      - slice_indices
      - decorators
  exception_handling:
    disallow_bare_except: true
    disallow_broad_except: true
    require_specific_except: true
    disallow_pass_only: true
    disallow_print_only: true
    require_finally: false
  dead_code:
    check_unused_imports: true
    check_unused_variables: true
    check_unused_functions: true
    ignore_private: true
    ignore_patterns:
      - __init__
      - test_*
  string_duplicates:
    min_length: 10
    min_occurrences: 3
    ignore_patterns:
      - urls
      - constants
      - common_words
  functions:
    max_arguments: 5
    max_default_args: 3
    max_boolean_flags: 2
    return_consistency:
      allow_multiple_types: false
      allow_multiple_returns: false
      require_type_hints: true
    naming:
      prefix_private: true
      prefix_protected: true
      test_prefix: test_
  loops:
    max_nested_depth: 2
    max_conditions: 3
    check_complexity: true
    max_variables: 4
    warn_on_break: true
  comments:
    require_meaningful: true
    min_words: 3
    check_spelling: true
    block_comment_style: true
    ignore_patterns:
      - pragma
      - noqa
      - type: ignore
    meaningful_indicators:
      - because
      - handles
      - prevents
      - ensures
      - implements
      - fixes
      - addresses
      - resolves
      - workaround
      - note
  security:
    check_patterns: true
    allowed_hashes:
      - sha256
      - sha512
    check_cors: true
    check_sql_injection: true
    check_shell_injection: true
    check_crypto: true
    sensitive_data_patterns:
      - password
      - token
      - secret
      - key
  testing:
    min_assertions: 1
    require_docstrings: true
    require_setup: true
    require_teardown: true
    naming_convention: test_*
    coverage_threshold: 80
    check_mocking: true
    check_fixtures: true
    test_organization:
      max_functions_per_file: 10
      prefer_classes: true
  dependencies:
    check_cycles: true
    ignore_patterns:
      - __init__.py
      - test_*.py
    max_import_depth: 5
    warn_on_relative_imports: true
  performance:
    check_patterns: true
    max_nested_loops: 2
    max_repeated_calls: 3
    check_container_operations: true
    check_string_operations: true
    patterns:
      - list_in_loop
      - dict_in_loop
      - string_concat
      - global_vars
    optimization_hints:
      - list_comprehension
      - dict_comprehension
      - set_lookup
      - string_join
  error_messages:
    require_context: true
    min_message_length: 20
    prefer_f_strings: true
    check_exception_chaining: true
    required_elements:
      - error_type
      - context
      - suggestion
    disallow_patterns:
      - "error occurred"
      - "invalid input"
      - "failed"
  api_documentation:
    required_sections:
      - Args
      - Returns
      - Raises
      - Example
    check_http_methods: true
    require_response_codes: true
    require_examples: true
    style:
      prefer_markdown: true
      code_block_style: backticks
    completeness:
      check_params: true
      check_returns: true
      check_errors: true
      check_examples: true
